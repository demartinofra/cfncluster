{
    "openapi": "3.0.2",
    "info": {
        "title": "ParallelCluster",
        "version": "3.0.0",
        "description": "ParallelCluster API"
    },
    "paths": {
        "/amis": {
            "get": {
                "description": "Describe ParallelCluster AMIs.",
                "operationId": "DescribeOfficialAmis",
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to retrieve AMIs for.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to retrieve AMIs for."
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "os",
                        "in": "query",
                        "description": "Filter by OS distribution",
                        "schema": {
                            "type": "string",
                            "description": "Filter by OS distribution"
                        }
                    },
                    {
                        "name": "arch",
                        "in": "query",
                        "description": "Filter by architecture",
                        "schema": {
                            "type": "string",
                            "description": "Filter by architecture"
                        }
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "int32",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeOfficialAmis 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeOfficialAmisResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "AMI"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters": {
            "get": {
                "description": "Retrieve the list of existing clusters managed by the API.",
                "operationId": "ListClusters",
                "parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "description": "List clusters deployed to a given AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "List clusters deployed to a given AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "int32",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListClusters 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListClustersResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster CRUD"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            },
            "post": {
                "description": "Create a ParallelCluster managed cluster in a given region.",
                "operationId": "CreateCluster",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClusterRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when creating the cluster. This option will only be available in case the API has support for multiple ParallelCluster versions",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when creating the cluster. This option will only be available in case the API has support for multiple ParallelCluster versions"
                        }
                    },
                    {
                        "name": "suppressValidators",
                        "in": "query",
                        "description": "Identifies one or more config validators to suppress. Format: ALL|id:$value|level:(info|error|warning)|type:$value",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Identifies one or more config validators to suppress. Format: ALL|id:$value|level:(info|error|warning)|type:$value"
                        },
                        "explode": true
                    },
                    {
                        "name": "validationFailureLevel",
                        "in": "query",
                        "description": "Min validation level that will cause the creation to fail. Defaults to 'error'.",
                        "schema": {
                            "$ref": "#/components/schemas/ValidationLevel"
                        }
                    },
                    {
                        "name": "dryrun",
                        "in": "query",
                        "description": "Only perform request validation without creating any resource. It can be used to validate the cluster configuration. Response code: 200",
                        "schema": {
                            "type": "boolean",
                            "description": "Only perform request validation without creating any resource. It can be used to validate the cluster configuration. Response code: 200",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "CreateCluster 202 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateClusterResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "CreateClusterBadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateClusterBadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ConflictException 409 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster CRUD"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}": {
            "delete": {
                "description": "Initiate the deletion of a cluster.",
                "operationId": "DeleteCluster",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "retainLogs",
                        "in": "query",
                        "description": "Retain cluster logs on delete. Defaults to True.",
                        "schema": {
                            "type": "boolean",
                            "description": "Retain cluster logs on delete. Defaults to True.",
                            "nullable": true
                        }
                    },
                    {
                        "name": "x-parallelcluster-version",
                        "in": "header",
                        "description": "Forces a specific ParallelCluster version to be used when handling this request.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "Forces a specific ParallelCluster version to be used when handling this request."
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "DeleteCluster 202 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteClusterResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster CRUD"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            },
            "get": {
                "description": "Get detailed information about an existing cluster.",
                "operationId": "DescribeCluster",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeCluster 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeClusterResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster CRUD"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateCluster",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClusterRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "dryrun",
                        "in": "query",
                        "description": "Only perform request validation without creating any resource. It can be used to validate the cluster configuration and update requirements. Response code: 200",
                        "schema": {
                            "type": "boolean",
                            "description": "Only perform request validation without creating any resource. It can be used to validate the cluster configuration and update requirements. Response code: 200",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateCluster 202 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateClusterResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "UpdateClusterBadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateClusterBadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ConflictException 409 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster CRUD"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}/computefleet/status": {
            "get": {
                "description": "Describe the status of the compute fleet",
                "operationId": "DescribeComputeFleetStatus",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeComputeFleetStatus 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeComputeFleetStatusResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster ComputeFleet"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            },
            "patch": {
                "description": "Update the status of the cluster compute fleet.",
                "operationId": "UpdateComputeFleetStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateComputeFleetStatusRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateComputeFleetStatus 202 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateComputeFleetStatusResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster ComputeFleet"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}/configurations": {
            "get": {
                "description": "Retrieve the history of cluster configurations for a given cluster",
                "operationId": "ListClusterConfigurations",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "List clusters deployed to a given AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "List clusters deployed to a given AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "int32",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListClusterConfigurations 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListClusterConfigurationsResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster Configuration"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}/configurations/{configVersion}": {
            "get": {
                "description": "Retrieve a specific cluster configuration version.",
                "operationId": "DescribeClusterConfiguration",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "configVersion",
                        "in": "path",
                        "description": "This can be either the version of the config to retrieve or the 'latest' keyword to fetch the latest configuration version.",
                        "schema": {
                            "type": "string",
                            "description": "This can be either the version of the config to retrieve or the 'latest' keyword to fetch the latest configuration version."
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeClusterConfiguration 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeClusterConfigurationResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster Configuration"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}/dcv": {
            "get": {
                "description": "Provides details on how to connect to the DCV session manager endpoint configured for the cluster.",
                "operationId": "DescribeDcvSessionManagerEndpoint",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeDcvSessionManagerEndpoint 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeDcvSessionManagerEndpointResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "DCV"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/clusters/{clusterId}/instances": {
            "delete": {
                "description": "Initiate the forced termination of all cluster compute nodes. Does not work with AWS Batch clusters",
                "operationId": "DeleteClusterInstances",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "Force the deletion also when the cluster id is not found.",
                        "schema": {
                            "type": "boolean",
                            "description": "Force the deletion also when the cluster id is not found.",
                            "nullable": true
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "DeleteClusterInstances 202 response"
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster Instances"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            },
            "get": {
                "description": "Describe the instances belonging to a given cluster.",
                "operationId": "DescribeClusterInstances",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "description": "Name of the cluster",
                        "schema": {
                            "type": "string",
                            "maxLength": 60,
                            "minLength": 5,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                            "description": "Name of the cluster"
                        },
                        "required": true
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "AWS Region",
                        "schema": {
                            "type": "string",
                            "description": "AWS Region"
                        },
                        "required": true
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "nodeType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "queueName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster.",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "description": "ParallelCluster version to use when handling this request. By default the API will use the version associated with the cluster."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DescribeClusterInstances 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeClusterInstancesResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cluster Instances"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        },
        "/versions": {
            "get": {
                "description": "Describe the supported ParallelCluster versions.",
                "operationId": "DescribeParallelClusterVersions",
                "responses": {
                    "200": {
                        "description": "DescribeParallelClusterVersions 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DescribeParallelClusterVersionsResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedClientError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedClientErrorResponseContent"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "LimitExceededException 429 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitExceededExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ParallelCluster Versions"
                ],
                "x-amazon-apigateway-integration": {
                    "credentials": {
                        "Fn::Sub": "${APIGatewayExecutionRole.Arn}"
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "uri": {
                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiGatewayLambdaFunction.Arn}/invocations"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AmiInfo": {
                "type": "object",
                "properties": {
                    "imageId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    }
                },
                "required": [
                    "architecture",
                    "imageId",
                    "name",
                    "os"
                ]
            },
            "BadRequestExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when a client calls an API with wrong parameters",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ClusterConfigurationStructure": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "description": "Cluster configuration as a YAML document",
                        "format": "byte"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ClusterConfigurationSummary": {
                "type": "object",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ClusterInfoSummary": {
                "type": "object",
                "properties": {
                    "cloudformationStackArn": {
                        "type": "string",
                        "description": "ARN of the main CloudFormation stack"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Name of the cluster"
                    },
                    "region": {
                        "type": "string",
                        "description": "AWS region where the cluster is created"
                    },
                    "version": {
                        "type": "string",
                        "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                        "description": "ParallelCluster version used to create the cluster"
                    }
                },
                "required": [
                    "cloudformationStackArn",
                    "clusterId",
                    "region",
                    "version"
                ]
            },
            "ClusterStatus": {
                "type": "string",
                "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "ROLLBACK_IN_PROGRESS",
                    "ROLLBACK_FAILED",
                    "ROLLBACK_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_COMPLETE",
                    "UPDATE_ROLLBACK_IN_PROGRESS",
                    "UPDATE_ROLLBACK_FAILED",
                    "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_ROLLBACK_COMPLETE"
                ]
            },
            "ComputeFleetStatus": {
                "type": "string",
                "enum": [
                    "START_REQUESTED",
                    "STARTING",
                    "RUNNING",
                    "STOP_REQUESTED",
                    "STOPPING",
                    "STOPPED",
                    "ENABLED",
                    "DISABLED"
                ]
            },
            "ComputeFleetStatusInput": {
                "type": "string",
                "enum": [
                    "START_REQUESTED",
                    "STOP_REQUESTED",
                    "ENABLED",
                    "DISABLED"
                ]
            },
            "ConfigValidationMessage": {
                "type": "object",
                "properties": {
                    "level": {
                        "$ref": "#/components/schemas/ValidationLevel"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the validator"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the validator"
                    },
                    "message": {
                        "type": "string",
                        "description": "Validation message"
                    }
                }
            },
            "ConflictExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when a client request to create/modify content would result in a conflict",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CreateClusterBadRequestExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when a client calls the CreateCluster API with an invalid request. This includes an error due to invalid cluster configuration.",
                "properties": {
                    "configurationValidationErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigValidationMessage"
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CreateClusterRequestContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 60,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9-]+$",
                        "description": "Name of the cluster"
                    },
                    "region": {
                        "type": "string",
                        "description": "AWS Region"
                    },
                    "clusterConfiguration": {
                        "type": "string",
                        "description": "Cluster configuration as a YAML document",
                        "format": "byte"
                    }
                },
                "required": [
                    "clusterConfiguration",
                    "name",
                    "region"
                ]
            },
            "CreateClusterResponseContent": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/ClusterInfoSummary"
                    },
                    "validationMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigValidationMessage"
                        },
                        "description": "List of messages collected during cluster config validation whose level is lower than the validationFailureLevel set by the user"
                    }
                },
                "required": [
                    "cluster",
                    "validationMessages"
                ]
            },
            "DeleteClusterResponseContent": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/ClusterInfoSummary"
                    }
                },
                "required": [
                    "cluster"
                ]
            },
            "DescribeClusterConfigurationResponseContent": {
                "type": "object",
                "properties": {
                    "clusterConfiguration": {
                        "$ref": "#/components/schemas/ClusterConfigurationStructure"
                    }
                },
                "required": [
                    "clusterConfiguration"
                ]
            },
            "DescribeClusterInstancesResponseContent": {
                "type": "object",
                "properties": {
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EC2Instance"
                        }
                    },
                    "nextToken": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances"
                ]
            },
            "DescribeClusterResponseContent": {
                "type": "object",
                "properties": {
                    "creationTime": {
                        "type": "string",
                        "description": "Timestamp representing the cluster creation time"
                    },
                    "computeFleetStatus": {
                        "$ref": "#/components/schemas/ComputeFleetStatus"
                    },
                    "headnode": {
                        "$ref": "#/components/schemas/EC2Instance"
                    },
                    "cloudformationStackArn": {
                        "type": "string",
                        "description": "ARN of the main CloudFormation stack"
                    },
                    "lastUpdatedTime": {
                        "type": "string",
                        "description": "Timestamp representing the last cluster update time"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Name of the cluster"
                    },
                    "region": {
                        "type": "string",
                        "description": "AWS region where the cluster is created"
                    },
                    "version": {
                        "type": "string",
                        "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                        "description": "ParallelCluster version used to create the cluster"
                    },
                    "clusterStatus": {
                        "$ref": "#/components/schemas/ClusterStatus"
                    },
                    "clusterConfiguration": {
                        "$ref": "#/components/schemas/ClusterConfigurationStructure"
                    }
                },
                "required": [
                    "cloudformationStackArn",
                    "clusterConfiguration",
                    "clusterId",
                    "clusterStatus",
                    "computeFleetStatus",
                    "creationTime",
                    "lastUpdatedTime",
                    "region",
                    "version"
                ]
            },
            "DescribeComputeFleetStatusResponseContent": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ComputeFleetStatus"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "DescribeDcvSessionManagerEndpointResponseContent": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "sessionManagerEndpoint": {
                        "type": "string",
                        "description": "https://<broker-hostname>:<port>"
                    }
                },
                "required": [
                    "clientId",
                    "clientSecret",
                    "sessionManagerEndpoint"
                ]
            },
            "DescribeOfficialAmisResponseContent": {
                "type": "object",
                "properties": {
                    "nextToken": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AmiInfo"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            },
            "DescribeParallelClusterVersionsResponseContent": {
                "type": "object",
                "properties": {
                    "enabledParallelClusterVersions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
                        },
                        "description": "ParallelCluster versions supported by the API."
                    },
                    "defaultParallelClusterVersion": {
                        "type": "string",
                        "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                        "description": "Default version used when version is not specified in the request."
                    }
                },
                "required": [
                    "defaultParallelClusterVersion",
                    "enabledParallelClusterVersions"
                ]
            },
            "EC2Instance": {
                "type": "object",
                "properties": {
                    "launchTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "publicIpAddress": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/InstanceState"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "instanceType",
                    "launchTime",
                    "privateIpAddress",
                    "state"
                ]
            },
            "InstanceState": {
                "type": "string",
                "enum": [
                    "pending",
                    "running",
                    "shutting-down",
                    "terminated",
                    "stopping",
                    "stopped"
                ]
            },
            "InternalServiceExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown on an unhandled service error",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "LimitExceededExceptionResponseContent": {
                "type": "object",
                "description": "The client is sending more than the allowed number of requests per unit of time.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ListClusterConfigurationsResponseContent": {
                "type": "object",
                "properties": {
                    "nextToken": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClusterConfigurationSummary"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            },
            "ListClustersResponseContent": {
                "type": "object",
                "properties": {
                    "nextToken": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClusterInfoSummary"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            },
            "NotFoundExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when the requested entity is not found",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UnauthorizedClientErrorResponseContent": {
                "type": "object",
                "description": "This exception is thrown when the client is not authorized to perform an action",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UpdateClusterBadRequestExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when a client calls the UpdateCluster API with an invalid request. This includes an error due to invalid cluster configuration and unsupported update.",
                "properties": {
                    "configurationValidationErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigValidationMessage"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "updateValidationErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateError"
                        }
                    }
                }
            },
            "UpdateClusterRequestContent": {
                "type": "object",
                "properties": {
                    "clusterConfiguration": {
                        "type": "string",
                        "description": "Cluster configuration as a YAML document",
                        "format": "byte"
                    }
                },
                "required": [
                    "clusterConfiguration"
                ]
            },
            "UpdateClusterResponseContent": {
                "type": "object",
                "properties": {
                    "clusterInfo": {
                        "$ref": "#/components/schemas/ClusterInfoSummary"
                    }
                },
                "required": [
                    "clusterInfo"
                ]
            },
            "UpdateComputeFleetStatusRequestContent": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ComputeFleetStatusInput"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "UpdateComputeFleetStatusResponseContent": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ComputeFleetStatus"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "UpdateError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ValidationLevel": {
                "type": "string",
                "enum": [
                    "INFO",
                    "WARNING",
                    "ERROR",
                    "CRITICAL"
                ]
            }
        },
        "securitySchemes": {
            "aws.auth.sigv4": {
                "type": "apiKey",
                "description": "AWS Signature Version 4 authentication",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    },
    "security": [
        {
            "aws.auth.sigv4": []
        }
    ]
}
